# Fluentbit deployment for Fission
#
# Requires:
# - service account: fission-svc
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-fission-fluentbit
data:
{{- if .Files.Get "config/fluentbit.conf" }}
  fluentbit.conf: |
{{ .Files.Get "config/fluentbit.conf" | indent 3 }}
{{ else }}
{{ fail "invalid chart" }}
{{- end }}
{{- if .Files.Get "config/parsers.conf" }}
  parsers.conf: |
{{ .Files.Get "config/parsers.conf" | indent 3 }}
{{ else }}
{{ fail "invalid chart" }}
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logger
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    svc: logger
spec:
  selector:
    matchLabels:
      svc: logger
  template:
    metadata:
      labels:
        svc: logger
    spec:
      initContainers:
        - name: init
          image: busybox
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ['mkdir', '-p', '/fission']
          volumeMounts:
            - name: container-log
              mountPath: /var/log/
              readOnly: false
      containers:
        - name: logger
{{ if .Values.repository }}
          image: "{{ .Values.repository }}/{{ .Values.image }}:{{ .Values.imageTag }}"
{{ else }}
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
{{ end }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          command: ["/fission-bundle"]
          args: ["--logger"]
          volumeMounts:
            - name: function-pod-log
              mountPath: /fission
              readOnly: false
            - name: container-log
              mountPath: /var/log/
              readOnly: true
            - name: docker-log
              mountPath: /var/lib/docker/containers
              readOnly: true
        - name: fluentbit
{{- if .Values.repository }}
          image: "{{ .Values.logger.fluentdImageRepository }}/{{ .Values.logger.fluentdImage }}:{{ .Values.logger.fluentdImageTag }}"
{{ else }}
          image: "{{ .Values.logger.fluentdImage }}:{{ .Values.logger.fluentdImageTag }}"
{{- end }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          # CMD ["/fluent-bit/bin/fluent-bit", "-c", "/fluent-bit/etc/fluent-bit.conf"]
          command: ["/fluent-bit/bin/fluent-bit", "-c", "/fluent-bit/etc/fluentbit.conf"]
          env:
            - name: INFLUXDB_ADDRESS
              value: influxdb
            - name: INFLUXDB_PORT
              value: "8086"
            - name: INFLUXDB_DBNAME
              value: "fissionFunctionLog"
            - name: INFLUXDB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: influxdb
                  key: username
            - name: INFLUXDB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: influxdb
                  key: password
            - name: LOG_PATH
              value: /fission/*.log
          volumeMounts:
            - name: function-pod-log
              mountPath: /fission
              readOnly: false
            - name: container-log
              mountPath: /var/log/
              readOnly: true
            - name: docker-log
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: fluentbit-config
              mountPath: /fluent-bit/etc/
              readOnly: true
            - name: fluentbit-db
              mountPath: /fluent-bit/db/
              readOnly: false
      serviceAccountName: fission-svc
      volumes:
        # for log symlink
        - name: function-pod-log
          emptyDir: {}
        - name: container-log
          hostPath:
            path: /var/log/
        - name: docker-log
          hostPath:
            path: /var/lib/docker/containers
        # Fluentbit config location: /fluent-bit/etc/*.conf
        - name: fluentbit-config
          configMap:
            name: {{ .Release.Name }}-fission-fluentbit
        - name: fluentbit-db
        {{- if .Values.logger.fluentdPersistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.logger.fluentdPersistence.existingClaim | default "fission-fluentbit-pvc" }}
        {{- else }}
          emptyDir: {}
        {{- end }}
  updateStrategy:
    type: RollingUpdate
---
{{- if and .Values.logger.fluentdPersistence.enabled (not .Values.logger.fluentdPersistence.existingClaim) }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: fission-fluentbit-pvc
  labels:
    app: fission-fluentbit
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
spec:
  accessModes:
    - {{ .Values.logger.fluentdPersistence.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.logger.fluentdPersistence.size | quote }}
  {{- if .Values.logger.fluentdPersistence.storageClass }}
  {{- if (eq "-" .Values.logger.fluentdPersistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.logger.fluentdPersistence.storageClass | quote }}
  {{- end }}
  {{- end }}
{{- end }}
